name: CI

on:
  push:
  pull_request:

env:
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SHELL_VERBOSITY: 1
  OCULAR_BIN: ocular.phar

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: false
    env:
      PHP_CS_FIXER_FUTURE_MODE: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring 
          ini-values: memory_limit=-1
          tools: composer, php-cs-fixer
          coverage: none
      - name: Run PHP-CS-Fixer fix
        run: php-cs-fixer fix --dry-run --diff --ansi

  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '7.4'
          - '8.0'
        include:
          - php: '7.4'
            coverage: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup MySQL
        run: |
          sudo systemctl start mysql.service
          mysqladmin -u root -proot password ''
          mysql -u root -e 'create database hautelook_alice_bundle;'
      - name: Setup coverage
        if: matrix.coverage
        run: |
          wget https://scrutinizer-ci.com/ocular.phar -O $OCULAR_BIN
          chmod +x $OCULAR_BIN
          echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring 
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Set Composer platform config
        if: (startsWith(matrix.php, '8.0'))
        run: composer config platform.php 7.4.99
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --prefer-dist --ansi
      - name: Run tests
        if: '!matrix.coverage'
        run: vendor/bin/phpunit --verbose --stop-on-failure
      - name: Run tests
        if: matrix.coverage
        run: vendor/bin/phpunit --verbose --stop-on-failure --coverage-text --coverage-clover=coverage.xml
      - name: Upload coverage
        if: matrix.coverage
        run: php $OCULAR_BIN code-coverage:upload --format=php-clover coverage.xml

  phpunit-lowest:
    name: PHPUnit (PHP ${{ matrix.php }} lowest deps)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup MySQL
        run: |
          sudo systemctl start mysql.service
          mysqladmin -u root -proot password ''
          mysql -u root -e 'create database hautelook_alice_bundle;'
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring 
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --prefer-lowest --ansi
      - name: Run tests
        run: vendor/bin/phpunit --verbose --stop-on-failure
